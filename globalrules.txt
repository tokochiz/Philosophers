Chapter IV  
グローバルルール  
必須部分と、ボーナス部分（もしボーナス部分に挑戦するなら）のためにプログラムを書かなければなりません。どちらのプログラムも以下のルールに従う必要があります:  
• グローバル変数は使用禁止です！  
• プログラムは以下の引数を受け取らなければなりません:  
`number_of_philosophers` 
`time_to_die` 
`time_to_eat` 
`time_to_sleep` 
[optional: `number_of_times_each_philosopher_must_eat`]  

◦ `number_of_philosophers`: 哲学者の人数とフォークの本数です。  
◦ `time_to_die`（ミリ秒単位）: 哲学者が最後の食事の開始時やシミュレーションの開始時から `time_to_die` ミリ秒以内に食事を始めなかった場合、彼らは死にます。  
◦ `time_to_eat`（ミリ秒単位）: 哲学者が食事に要する時間です。その間、哲学者は2本のフォークを持つ必要があります。  
◦ `time_to_sleep`（ミリ秒単位）: 哲学者が眠る時間です。  
◦ `number_of_times_each_philosopher_must_eat`（オプション引数）: すべての哲学者が `number_of_times_each_philosopher_must_eat` 回食事を終えると、シミュレーションは終了します。指定されない場合、哲学者が死ぬとシミュレーションは終了します。  
• 各哲学者には、1から `number_of_philosophers` までの番号が割り当てられます。  
• 哲学者番号1は、`number_of_philosophers` 番の哲学者の隣に座ります。その他の哲学者番号 N は、哲学者番号 N - 1 と哲学者番号 N + 1 の間に座ります。  

哲学者は、哲学がこれほど命に関わるとは思わなかった

プログラムのログについて:  
• 哲学者の状態の変化は、以下のフォーマットで表示されなければなりません:  
◦ `timestamp_in_ms X has taken a fork`  
◦ `timestamp_in_ms X is eating`  
◦ `timestamp_in_ms X is sleeping`  
◦ `timestamp_in_ms X is thinking`  
◦ `timestamp_in_ms X died`  
`timestamp_in_ms` には現在のタイムスタンプ（ミリ秒）を、X には哲学者の番号を置き換えてください。  
• 表示される状態メッセージは、他のメッセージと混在してはいけません。  
• 哲学者が死んだことを知らせるメッセージは、実際に死んだ時から10ミリ秒以内に表示されなければなりません。  
• 繰り返しになりますが、哲学者をできるだけ死なせないようにしましょう！  
プログラムにデータ競合があってはなりません。

Chapter V  
必須部分  
プログラム名: `philo`  
ファイルの提出: `Makefile`、`*.h`、`*.c` を `philo/` ディレクトリに配置  
`Makefile` ターゲット: `NAME`、`all`、`clean`、`fclean`、`re`  
引数:  
- `number_of_philosophers`  
- `time_to_die`  
- `time_to_eat`  
- `time_to_sleep`  
- `[optional: number_of_times_each_philosopher_must_eat]`

使用可能な外部関数:  
- `memset`、`printf`、`malloc`、`free`、`write`、`usleep`、`gettimeofday`、`pthread_create`、`pthread_detach`、`pthread_join`、`pthread_mutex_init`、`pthread_mutex_destroy`、`pthread_mutex_lock`、`pthread_mutex_unlock`

`Libft`の使用: 許可されていません

説明:  
哲学者の問題をスレッドとミューテックスを使って実装します。

必須部分の具体的なルールは以下の通りです:  
• 各哲学者は1つのスレッドである必要があります。  
• 各哲学者の間には1本のフォークがあります。したがって、複数の哲学者がいる場合、各哲学者の左側に1本のフォーク、右側にも1本のフォークがあります。もし1人の哲学者しかいない場合、テーブルには1本のフォークしかありません。  
• 哲学者がフォークを重複して使用しないようにするため、各フォークの状態を保護するためにそれぞれにミューテックスを使用する必要があります。

